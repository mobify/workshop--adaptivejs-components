
var _ = require('lodash');

function PackageDependencies(dependencies) {
    if (dependencies && !_.isObject(dependencies)) {
        throw 'The PackageDependencies constructor accepts only objects containing key/value dependencies';
        return;
    }

    this.dependencies = _.extend({}, dependencies);
}

PackageDependencies.prototype.add = function(dependencyKey, dependencyValue) {
    if (_.isObject(dependencyKey)) {
        this.dependencies = _.extend(this.dependencies, dependencyKey);
    } else {
        this.dependencies[dependencyKey] = dependencyValue;
    }
};

PackageDependencies.prototype.includes = function(key) {
    return !!this.dependencies[key];
};

PackageDependencies.prototype.toJson = function() {
    return JSON.stringify(this.dependencies, null, 8);
};

module.exports = PackageDependencies;
