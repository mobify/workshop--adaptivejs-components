define([
    'adaptivejs/utils/buildOrigin',
    'buildConfig'
],
function(buildOrigin, buildConfig) {

    var assetUtils = {};

    /**
     *  Returns the full url for the provided asset path
     *  including a cache breaker.
     *  basePath and cacheBreaker arguments are optional
     */
    assetUtils.getAssetUrl = function(path, baseUrl, cacheBreaker) {
        var hash = buildConfig.cacheHashManifest[path];

        // If path isn't found in the hashManifest, cache break with build date
        if (cacheBreaker === undefined) {
            cacheBreaker = hash ? hash : buildConfig.buildDate;
        }

        return (baseUrl || buildOrigin()) + path + '?' + cacheBreaker;
    };

    /**
     *  Dynamically adds an element to the page based on the nodeName
     *  and options supplied
     *
     *  ex: Utils.loadAsset('link', {
     *          href: 'css/stylesheet.css',
     *          rel: 'stylesheet',
     *          type: 'text/css'
     *      });
     */
    assetUtils.loadAsset = function(nodeName, options) {
        var firstScript = document.getElementsByTagName('script')[0];

        var script = document.createElement(nodeName);
        for (var prop in options) {
            if (options.hasOwnProperty(prop)) {
                script[prop] = options[prop];
            }
        }
        firstScript.parentNode.insertBefore(script, firstScript);
    };

    return assetUtils;
});
