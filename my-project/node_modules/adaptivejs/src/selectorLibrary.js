/**
 * A selector library which is extended from a base selector library,
 * but with a constructer that calls the selector engine on the doc
 * defined in the closure, and a few additional methods for
 * getting/setting that document.
 */
define(['baseSelectorLibrary'], function($) {
    var doc = document;

    var SelectorLibrary = function(selector, context, rootQuery) {
        if ($.fn.init) {
            return new $.fn.init(selector, context || doc, rootQuery);
        }
        return $.zepto.init.call(this, selector, context || doc, rootQuery);
    };

    /**
     *  Binds the passed document to the selector engine.
     *  All queries are done against that document, not the current document.
     */
    SelectorLibrary.attachDocument = function(document) {
        doc = document;
    };

    SelectorLibrary.getDocument = function() {
        return doc;
    };

    $.extend(SelectorLibrary, $);

    return SelectorLibrary;
});
