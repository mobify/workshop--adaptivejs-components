define([
    'adaptivejs/utils',
    'json!package'
], function(Utils, package) {
    var projectName;

    try {
        projectName = package.name;
    } catch (e) {
        console.error('Couldn\'t determine the project name. Be sure that is in defined in the package.json file.');
    }

    /**
     *  Returns an object with some useful defaults that can be used
     *  to build up a more complex context
     */
    function getContext() {
        var defaultContext = {};
        var config = {};

        config.projectName = projectName;
        config.isDebug = Utils.isDebug();
        config.isLocal = Utils.isLocal();
        config.adaptiveLibs = Utils.getAdaptiveLibs();
        config.adaptiveBuildScript = Utils.getBuildScript();
        config.adaptiveBuild = config.adaptiveBuildScript && config.adaptiveBuildScript.getAttribute('src');
        config.buildOrigin = Utils.getBuildOrigin();
        config.ajs = function(context) {
            return Utils.getAjs(config.projectName, context.templateName);
        };

        defaultContext.config = config;
        return defaultContext;
    }

    return {
        'projectName': projectName,
        'getContext': getContext
    };

});
