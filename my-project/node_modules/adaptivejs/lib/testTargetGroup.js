define([
    'lib/testTarget',
    'lodash'
],
function(TestTarget, _) {
    var TestTargetGroup = function(name /* ... */) {
        // There are three call formats:
        //
        // new TestTargetGroup(target)
        //  Create an unnamed group with target
        //
        // new TestTargetGroup(targetGroup)
        //  Copy the given targetGroup
        //
        // new TestTargetGroup(name, *targets)
        //  Create a named group with the given targets
        //
        var targets = [].slice.call(arguments, 1);

        if (name instanceof TestTarget) {
            var target = name;
            this.name = '';
            this.targets = [target];
        } else if (name instanceof TestTargetGroup) {
            var targetGroup = name;
            this.name = targetGroup.name;
            this.targets = _.clone(targetGroup.targets);
        } else {
            this.name = name;
            this.targets = targets;
        }
    };

    TestTargetGroup.prototype.labelForTarget = function(target) {
        var names = [this.name, target.name];

        // Only keep non-empty names
        names = _.filter(names, function(name) { return !!name; });

        return names.length ? '[' + names.join(' - ') + ']' : '';
    };

    return TestTargetGroup;
});
